function r(a=""){return Object.fromEntries(a.split("; ").filter(Boolean).map(i=>{let[s,o]=i.split("=");return[decodeURIComponent(s),decodeURIComponent(o)]}))}async function g(a,i,s){let o=a.searchParams.get("code"),c=a.searchParams.get("state"),e=r(i.headers.get("Cookie"));if(!o||c!==e.oauth_state||!e.pkce_verifier)return new Response("Invalid state or missing PKCE verifier",{status:400});let n;if(e.authn_method==="google"){let{exchangeTokenWithGoogle:t}=await import("./authnGoogle-GJJHYT7I.js");n=await t(s,e,o)}else if(e.authn_method==="ms"){let{exchangeTokenWithMs:t}=await import("./authnMs-RGWWGHHV.js");n=await t(s,e,o)}else return e.authn_method==="magic-link"?new Response("Moikka botti"):new Response("Unknown authn_method",{status:400});if(!n.ok){let t=await n.text();return new Response(`Token exchange failed: ${t}`,{status:502})}let p=(await n.json()).id_token;function l(t){return atob(t.replace(/-/g,"+").replace(/_/g,"/"))}let[,u]=p.split("."),d=JSON.parse(l(u));return new Response(JSON.stringify(d),{headers:{"content-type":"application/json"}})}export{g as authnCallback};
