function n(t,a){let s=t.searchParams.get("code_challenge"),o=t.searchParams.get("state");if(!s||!o)return new Response("Missing code_challenge or state",{status:400});let e=new URL("https://accounts.google.com/o/oauth2/v2/auth");return e.searchParams.set("client_id",a.GOOGLE_CLIENT_ID),e.searchParams.set("redirect_uri",a.AUTH_REDIRECT_URI),e.searchParams.set("response_type","code"),e.searchParams.set("scope","openid email profile"),e.searchParams.set("code_challenge",s),e.searchParams.set("code_challenge_method","S256"),e.searchParams.set("state",o),Response.redirect(e,302)}async function i(t,a,s){let o=await t.GOOGLE_OAUTH_CLIENT_SECRET.get(),e=new URLSearchParams({code:s,client_id:t.GOOGLE_CLIENT_ID,client_secret:o,redirect_uri:t.AUTH_REDIRECT_URI,grant_type:"authorization_code",code_verifier:a.pkce_verifier}),r=await fetch("https://oauth2.googleapis.com/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:e});if(!r.ok){let c=await r.text();return new Response(`Token exchange failed: ${c}`,{status:502})}return r}export{i as exchangeTokenWithGoogle,n as requestAuthnViaGoogle};
